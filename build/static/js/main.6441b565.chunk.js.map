{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","_ref","card","handleChoice","flipped","disabled","_jsx","className","children","_jsxs","src","alt","onClick","handleClick","cardImages","matched","App","cards","setCards","useState","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","document","title","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"mPAEe,SAASA,EAAUC,GAA2C,IAA1C,KAACC,EAAI,aAAEC,EAAY,QAAEC,EAAO,SAAEC,GAAUJ,EAOvE,OACIK,cAAA,OAAKC,UAAU,OAAMC,SACrBC,eAAA,OAAKF,UAAWH,EAAU,UAAY,GAAGI,SAAA,CACvCF,cAAA,OAAKC,UAAU,QAAQG,IAAKR,EAAKQ,IAAKC,IAAI,eAC1CL,cAAA,OACAC,UAAU,OACVG,IAAI,iBACJE,QAZcC,KACZR,GACAF,EAAaD,IAWfS,IAAI,mBCbd,MAAMG,EAAY,CAChB,CAAC,IAAM,oBAAqBC,SAAS,GACrC,CAAC,IAAM,oBAAqBA,SAAS,GACrC,CAAC,IAAM,kBAAkBA,SAAS,GAClC,CAAC,IAAM,oBAAoBA,SAAS,GACpC,CAAC,IAAM,oBAAoBA,SAAS,GACpC,CAAC,IAAM,mBAAmBA,SAAS,IAwFtBC,MArFf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAOC,GAAYF,mBAAS,IAC5BG,EAAUC,GAAgBJ,mBAAS,OACnCK,EAAWC,GAAgBN,mBAAS,OACpCd,EAAUqB,GAAeP,oBAAS,GAGnCQ,EAAcA,KAClB,MAAMC,EAAgB,IAAId,KAAeA,GACxCe,MAAK,IAAKC,KAAKC,SAAS,KACxBC,KAAK9B,IAAI,IAAWA,EAAM+B,GAAIH,KAAKC,aAEpCR,EAAa,MACbE,EAAa,MACbP,EAASU,GACTP,EAAS,IAILlB,EAAgBD,IACpBoB,EAAYG,EAAavB,GAAQqB,EAAarB,IAGhDgC,qBAAU,KACRC,SAASC,MAAQ,cACjB,IAGFF,qBAAU,KACLZ,GAAaE,IACdE,GAAY,GACRJ,EAAUZ,MAAQc,EAAUd,KAC9BQ,GAASmB,GACAA,EAAUL,KAAI9B,GACfA,EAAKQ,MAAQY,EAAUZ,IAClB,IAAIR,EAAMa,SAAS,GAErBb,MAIXoC,KAEAC,YAAW,IAAMD,KAAa,QAGlC,CAAChB,EAAWE,IAEdgB,QAAQC,IAAIxB,GAGZ,MAAMqB,EAAYA,KAChBf,EAAa,MACbE,EAAa,MACbJ,GAASqB,GAAaA,EAAY,IAClChB,GAAY,IAQd,OAJAQ,qBAAU,KACRP,MACC,IAGDlB,eAAA,OAAKF,UAAU,MAAKC,SAAA,CAClBF,cAAA,MAAAE,SAAI,gBACJF,cAAA,UAAQM,QAASe,EAAanB,SAAC,aAE/BF,cAAA,OAAKC,UAAU,YAAWC,SACvBS,EAAMe,KAAI9B,GACPI,cAACN,EAAU,CAEXE,KAAMA,EACNC,aAAcA,EACdC,QAAWF,IAASoB,GAAapB,IAASsB,GAAatB,EAAKa,QAC5DV,SAAYA,GAJPH,EAAK+B,QAQhBxB,eAAA,KAAAD,SAAA,CAAG,UAAQY,SCxFjBuB,IAASC,OACPtC,cAACuC,IAAMC,WAAU,CAAAtC,SACfF,cAACU,EAAG,MAENmB,SAASY,eAAe,W","file":"static/js/main.6441b565.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nexport default function SingleCard({card, handleChoice, flipped, disabled }){\r\n\r\n    const handleClick = () => {\r\n        if(!disabled) {\r\n            handleChoice(card)\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"card\">\r\n        <div className={flipped ? 'flipped' : \"\"}> \r\n          <img className=\"front\" src={card.src} alt=\"card front\" />\r\n          <img \r\n          className=\"back\"\r\n          src=\"/img/cover.png\"\r\n          onClick={handleClick} \r\n          alt=\"card back\"/>\r\n        </div>\r\n      </div>   \r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport SingleCard from './components/SingleCard'\r\n\r\nconst cardImages =[\r\n  {\"src\":\"/img/helmet-1.png\", matched: false },\r\n  {\"src\":\"/img/potion-1.png\" ,matched: false },\r\n  {\"src\":\"/img/ring-1.png\",matched: false },\r\n  {\"src\":\"/img/scroll-1.png\",matched: false },\r\n  {\"src\":\"/img/shield-1.png\",matched: false },\r\n  {\"src\":\"/img/sword-1.png\",matched: false }\r\n]\r\n\r\nfunction App() {\r\n  const [cards, setCards] = useState([])\r\n  const [turns, setTurns] = useState(0)\r\n  const [choiceOne,setChoiceOne] = useState(null)\r\n  const [choiceTwo, setChoiceTwo] = useState(null)\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  // shuffle card\r\n  const shuffleCards =()=> {\r\n    const shuffledCards = [...cardImages, ...cardImages]\r\n    .sort(()=> Math.random()-0.5)\r\n    .map((card) => ({ ...card, id: Math.random() }))\r\n\r\n    setChoiceOne(null)\r\n    setChoiceTwo(null)\r\n    setCards(shuffledCards)\r\n    setTurns(0)\r\n  }\r\n\r\n  // handle a choice\r\n  const handleChoice = (card) => {\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"MagicGame\"\r\n  },[]);\r\n\r\n  // compare 2 selected cards\r\n  useEffect(()=> {\r\n    if(choiceOne && choiceTwo){\r\n      setDisabled(true)\r\n      if (choiceOne.src === choiceTwo.src){\r\n        setCards(prevCards =>{\r\n          return prevCards.map(card =>{\r\n            if (card.src === choiceOne.src) {\r\n              return {...card, matched: true}\r\n          } else {\r\n            return card\r\n          }\r\n          })\r\n        })\r\n        resetTurn()\r\n      } else{\r\n        setTimeout(() => resetTurn(), 1000)\r\n      }\r\n    }\r\n  },[choiceOne, choiceTwo])\r\n\r\n  console.log(cards)\r\n\r\n  // reset choices & increase turn\r\n  const resetTurn = () => {\r\n    setChoiceOne(null)\r\n    setChoiceTwo(null)\r\n    setTurns(prevTurns => prevTurns + 1)\r\n    setDisabled(false)\r\n  }\r\n\r\n  // start a new game automatically\r\n  useEffect(()=> {\r\n    shuffleCards()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Magic Match</h1>\r\n      <button onClick={shuffleCards}>New Game</button>\r\n\r\n      <div className=\"card-grid\">\r\n        {cards.map(card => (\r\n            <SingleCard\r\n            key={card.id} \r\n            card={card} \r\n            handleChoice={handleChoice}\r\n            flipped = {card === choiceOne || card === choiceTwo || card.matched}\r\n            disabled = {disabled}\r\n            />\r\n        ))}\r\n      </div>\r\n      <p>Turns: {turns}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}